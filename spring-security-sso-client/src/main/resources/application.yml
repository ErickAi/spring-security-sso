server:
  port: 8071
spring:
  thymeleaf:
    cache: false
  jpa:
    show-sql: true
    open-in-view: false
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 20
        jdbc.batch_size: 20
  datasource:
    #tcp-connection: jdbc:h2:tcp://localhost:9092/mem:client
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:client
    username: admin
    password:
  security.oauth2.client.registration:
    google:
      clientId: 15541412979-6urtln3bffg8g7vpijn2b20brl9guh9a.apps.googleusercontent.com
      clientSecret: hiX1tW3kQwp1sIcPZoArpx7d
      redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
      scope:
        - email
        - profile
    github:
      clientId: 730c1b86961ac29ad94d
      clientSecret: 34e3add435088e10837a409361ecf2f84f1d6be3
      redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
      scope:
        - user:email
        - read:user

#    custom:
#      client-id: client_id
#      client-secret: client_secret

#        clientId: client_id
#        clientSecret: client_secret
#        accessTokenUri: http://localhost:8081/auth/oauth/token
#        userAuthorizationUri: http://localhost:8081/auth/oauth/authorize
#      resource:
#        userInfoUri: http://localhost:8081/auth/user/me


logging:
  level:
    org.springframework: debug
    org.securityclient: debug
